#+TITLE: Slackware Notes

* FAQs
** How to send soft rfkill(especially when using USB card with PC)
There is a commandline tool called =rfkill=, that would do.

=rfkill block wlan= to block all wlan device.
=rfkill unblock wlan= to unblock all wlan device.
** Compiling 32-bit programs

In case you need to compile a 32-bit program (wine and grub are two examples
of open source programs that are 32-bit only) you first configure your
shell environment by running the command:

#+BEGIN_SRC sh
  . /etc/profile.d/32dev.sh
#+END_SRC

Note the 'dot' in front of the filename - that is actually part of the
commandline!  It will change or create several environment variables so
that 32-bit versions of binaries are preferred.  Once you are done compiling
32-bit software, you should logout of your root shell in order to get rid of
the modified build environment.

In this changed environment, you will be able to use standard SlackBuilds to
build 32-bit packages for Slackware64.
There's a couple of things to keep in mind:

1. You have to define the ARCH variable as 'i486' because even on your
   'x86_64' computer you are compiling a 32-bit program! 
   This is related to the triplet of '$ARCH-slackware-linux' which 
   is normally used in the 'configure' command.
   a. As an exception, you will have to compile the 'wine' package with
       'ARCH=x86_64' because you will install this package directly on
       your multilib computer without converting to a 'compat32' package.

2. If you want to install this 32-bit package on Slackware64-multilib,
   you will have to convert it to a 'compat32' package:

#+BEGIN_SRC sh
  # convertpkg-compat32 -i /path/to/your/fresh/foo-VERSION-i486-BUILD.tgz
  # upgradepkg --install-new /tmp/foo-compat32-VERSION-x86_64-BUILDcompat32.txz
#+END_SRC
